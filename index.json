[{"categories":null,"contents":"Focus Light is a Machine Learning based IoT system that helps people focusing on their work. The system runs at the background of the computer, collects user activities, and identifies the user\u0026rsquo;s current working status. A light bulb is connected to the system to indicate the user\u0026rsquo;s status. When the system detects that the user is currently focusing, the light bulb turns red which informs the colleagues that this person is currently busy which potentially reduces unnecessary interruptions in the workplace.\n","permalink":"http://ekh0.github.io/projects/creations/focus_light/","tags":["Python","Machine Learning","IoT"],"title":"Focus Light"},{"categories":null,"contents":" Built the university theaterâ€™s inventory management system with teammates. Designed database schema. Designed and implemented user management system. Implemented the full-text searching feature of the system which allows users to easily locate the costume they want without using the filters. Responsible for bug fixing, system maintenance, and customer support until graduation.  ","permalink":"http://ekh0.github.io/projects/creations/theater/","tags":["Php","SQL"],"title":"CENTRE THEATER WEBSITE"},{"categories":null,"contents":" A 2D puzzle game created for mobile platforms, powered by Unity3D. Contributed to the concept and game-play of the game. Implemented several components of the game including the large rock, moving platforms, and seesaw.  ","permalink":"http://ekh0.github.io/projects/creations/sisyphus/","tags":["C#","Unity2D"],"title":"Project Sisyphus"},{"categories":null,"contents":"Test Test\n","permalink":"http://ekh0.github.io/blog/test/","tags":["test"],"title":"Testpage"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;JSON\u0026#34;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026#34;contents\u0026#34;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026#34;tags\u0026#34;:{{ .Params.tags | jsonify }}{{end}}, \u0026#34;categories\u0026#34; : {{ .Params.categories | jsonify }}, ... Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026#34;title\u0026#34;, \u0026#34;contents\u0026#34;, \u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34; ] ","permalink":"http://ekh0.github.io/search/","tags":null,"title":"Search Results"}]